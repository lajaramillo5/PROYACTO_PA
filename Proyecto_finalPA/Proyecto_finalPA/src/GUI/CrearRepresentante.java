/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.BLRepresentante;
import BL.BLUsuario;
import BL.Expresiones;
import clases.Representante;
import clases.Usuario;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexis Montoya
 */
public class CrearRepresentante extends javax.swing.JFrame {

    BLRepresentante blrepre = new BLRepresentante();
    Representante repre = new Representante();
     Expresiones expre =new Expresiones();

    public CrearRepresentante() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelAsignatura2 = new javax.swing.JLabel();
        jTextDocente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtcorreo_rep = new javax.swing.JTextField();
        txttelef_rep = new javax.swing.JTextField();
        txtdir_rep = new javax.swing.JTextField();
        txtcedula_rep = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        txtapell_rep = new javax.swing.JTextField();
        txtnom_rep = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTexteditdirec = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonAceptarRepre = new javax.swing.JButton();
        jButtonLimpiarRepre = new javax.swing.JButton();
        CargarRepre = new javax.swing.JButton();
        jButtonModificarRepre = new javax.swing.JButton();
        jButtonEliminarRepre = new javax.swing.JButton();
        btnsalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("REGISTRAR REPRESENTANTE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 14, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 97, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Apellido:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 137, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Edad:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 177, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Cédula:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Dirección:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 204, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Telefono:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Correo:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 271, -1, -1));

        jLabelAsignatura2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelAsignatura2.setText("Seleccione un representante :");
        getContentPane().add(jLabelAsignatura2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        jTextDocente.setBackground(new java.awt.Color(0, 0, 0));
        jTextDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDocenteActionPerformed(evt);
            }
        });
        jTextDocente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDocenteKeyTyped(evt);
            }
        });
        getContentPane().add(jTextDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(486, 250, 110, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 54, 390, 165));

        txtcorreo_rep.setBackground(new java.awt.Color(0, 0, 0));
        txtcorreo_rep.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtcorreo_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 271, 160, -1));

        txttelef_rep.setBackground(new java.awt.Color(0, 0, 0));
        txttelef_rep.setForeground(new java.awt.Color(255, 255, 255));
        txttelef_rep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttelef_repKeyTyped(evt);
            }
        });
        getContentPane().add(txttelef_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 120, -1));

        txtdir_rep.setBackground(new java.awt.Color(0, 0, 0));
        txtdir_rep.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtdir_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 209, 160, -1));

        txtcedula_rep.setBackground(new java.awt.Color(0, 0, 0));
        txtcedula_rep.setForeground(new java.awt.Color(255, 255, 255));
        txtcedula_rep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedula_repKeyTyped(evt);
            }
        });
        getContentPane().add(txtcedula_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 59, 100, -1));

        jSpinner1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(18, 18, 100, 1));
        getContentPane().add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 176, -1, -1));

        txtapell_rep.setBackground(new java.awt.Color(0, 0, 0));
        txtapell_rep.setForeground(new java.awt.Color(255, 255, 255));
        txtapell_rep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapell_repKeyTyped(evt);
            }
        });
        getContentPane().add(txtapell_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 138, 160, -1));

        txtnom_rep.setBackground(new java.awt.Color(0, 0, 0));
        txtnom_rep.setForeground(new java.awt.Color(255, 255, 255));
        txtnom_rep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnom_repKeyTyped(evt);
            }
        });
        getContentPane().add(txtnom_rep, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 97, 160, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Cambiar direccion:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, -1, -1));

        jTexteditdirec.setBackground(new java.awt.Color(0, 0, 0));
        jTexteditdirec.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jTexteditdirec, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 160, -1));

        jButton2.setText("Si");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, -1, -1));

        jButton3.setText("No");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 290, -1, -1));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonAceptarRepre.setBackground(new java.awt.Color(102, 102, 102));
        jButtonAceptarRepre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonAceptarRepre.setText("Guardar");
        jButtonAceptarRepre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarRepreActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAceptarRepre);

        jButtonLimpiarRepre.setBackground(new java.awt.Color(102, 102, 102));
        jButtonLimpiarRepre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonLimpiarRepre.setText("Limpiar");
        jButtonLimpiarRepre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarRepreActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLimpiarRepre);

        CargarRepre.setBackground(new java.awt.Color(102, 102, 102));
        CargarRepre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CargarRepre.setText("Cargar");
        CargarRepre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarRepreActionPerformed(evt);
            }
        });
        jPanel1.add(CargarRepre);

        jButtonModificarRepre.setBackground(new java.awt.Color(102, 102, 102));
        jButtonModificarRepre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonModificarRepre.setText("Modificar Representante");
        jButtonModificarRepre.setEnabled(false);
        jButtonModificarRepre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarRepreActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonModificarRepre);

        jButtonEliminarRepre.setBackground(new java.awt.Color(102, 102, 102));
        jButtonEliminarRepre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonEliminarRepre.setText("Eliminar Representante");
        jButtonEliminarRepre.setEnabled(false);
        jButtonEliminarRepre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarRepreActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminarRepre);

        btnsalir.setBackground(new java.awt.Color(102, 102, 102));
        btnsalir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnsalir.setText("Volver");
        btnsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnsalir);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 650, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void habilitarComponentes() {
        jButtonEliminarRepre.setEnabled(false);
        jButtonModificarRepre.setEnabled(false);
        jButtonAceptarRepre.setEnabled(true);
        jButtonLimpiarRepre.setEnabled(true);
        CargarRepre.setEnabled(true);

    }

    public void ListarDatos() throws ClassNotFoundException, SQLException {
        //Como el método de la BL retorna un ArrayList de la clase Estudiantes
        //Aqui lo recuperamos

        ArrayList<Representante> lstrepres = blrepre.ConsultaLista();

        Object columnas[] = {"nombres", "apellidos", "edad", "cedula", "direccion", "Telefono", "correo"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        jTable1.setModel(modelo);

        for (Representante objeto : lstrepres) {
            //String id=String.valueOf(objeto.getStrCodigo());
            String nombres = objeto.getNombre();
            String apellidos = objeto.getApellido();
            String direccion = objeto.getDireccion();
            String cedula = objeto.getCedula();
            int edad = objeto.getEdad();
            String correo = objeto.getCorreo();
            String telefono = objeto.getTelefono();
            String modeloTemp[] = {nombres, apellidos, String.valueOf(edad), cedula, direccion, telefono, correo};
            modelo.addRow(modeloTemp);
        }

    }

    private void limpiar() {
        this.txtnom_rep.setText("");
        this.txtapell_rep.setText("");
        this.txtcedula_rep.setText("");
        this.txtcorreo_rep.setText("");
        this.txttelef_rep.setText("");
        this.txtdir_rep.setText("");

//        this.jComboBoxSeleccionAsignatura.setSelectedIndex(0);
//        this.jComboBoxSeleccionCurso.setSelectedIndex(0);
        //      this.jComboBoxSeleccionDocente.setSelectedIndex(0);
        habilitarComponentes();
    }

    public boolean validar() {
        if (txtnom_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del nombre del representante esta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (txtapell_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del apellido del Representante esta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (this.txtcorreo_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del codigo del carnet del representante esta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (txtcedula_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del documento del representante esta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (txttelef_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del telefono del representante esta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (txtdir_rep.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "campo de texto del RH del representanteesta vacio", "docentes", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else {
            try {
                Integer.parseInt(txtcedula_rep.getText());

                Integer.parseInt(txttelef_rep.getText());
                return true;
            } catch (NullPointerException | NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "algun dato esta con el formato incorrecto", "docentes", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }

        }
    }

    private void crearRepresentante() throws ClassNotFoundException, SQLException {

        boolean creado = false;
        Expresiones expre = new Expresiones();
        if (validar()) {
            BLUsuario user = new BLUsuario();
            Usuario userai = new Usuario();
            repre.setCedula(txtcedula_rep.getText());
            repre.setTelefono(txttelef_rep.getText());
            repre.setNombre(txtnom_rep.getText());
            repre.setApellido(txtapell_rep.getText());
            repre.setDireccion(txtdir_rep.getText());
            repre.setCorreo(txtcorreo_rep.getText());
            repre.setEdad((int) this.jSpinner1.getValue());
            if (blrepre.Consultar(repre)) {
                if (expre.NumeroTelefono(txttelef_rep.getText()) && expre.mailValido(txtcorreo_rep.getText()) && expre.referencia(txtdir_rep.getText())) {
                    creado = blrepre.RegistrarRepresentante(repre);
                    userai.setUser(this.txtnom_rep.getText() + (int) this.jSpinner1.getValue());
                    userai.setPassword(txtcedula_rep.getText());
                    userai.setRoll(1);
                    user.RegistrarUsuario(userai);
                }

                if (creado) {
                    limpiar();
                    this.ListarDatos();
                    JOptionPane.showMessageDialog(this, "Se creo el Representante", "Crear docente", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo Crear el docente", "crear docente", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                txtcedula_rep.setText("");
                txtcedula_rep.requestFocus();
                JOptionPane.showMessageDialog(this, "El represntante ya existe", "Crear docente", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void eliminarRepresentante() throws SQLException, ClassNotFoundException {

        String cedula = this.jTextDocente.getText();
        repre.setCedula(cedula);
        if (blrepre.Consultar(repre)) {
            blrepre.Eliminar(repre);

            JOptionPane.showMessageDialog(this, "se elimino el representante", "representante", JOptionPane.INFORMATION_MESSAGE);
            habilitarComponentes();
            this.ListarDatos();
            limpiar();
        }

    }

    private void modificarDireccion() throws ClassNotFoundException, SQLException {

        String Direccion = this.jTexteditdirec.getText();
        String Cedula = this.jTextDocente.getText();
        repre.setCedula(Cedula);
        if (blrepre.Consultar(repre)) {
            String actual = repre.getDireccion();
            repre.setDireccion(Direccion);
            if (expre.referencia(Direccion)) {
                 blrepre.Modificar(repre);
            JOptionPane.showMessageDialog(this, "se ha modificado la direccion", "representante", JOptionPane.INFORMATION_MESSAGE);
            habilitarComponentes();
            this.ListarDatos();
            limpiar();
            }
           
        }

    }
    private void jButtonAceptarRepreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarRepreActionPerformed
        try {
            // TODO add your handling code here:
            crearRepresentante();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAceptarRepreActionPerformed

    private void btnsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalirActionPerformed
        // TODO add your handling code here:
        GUISecretaria notas = new GUISecretaria();
        notas.setEnabled(true);
        notas.setVisible(true);
        dispose();
        limpiar();

    }//GEN-LAST:event_btnsalirActionPerformed

    private void jTextDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDocenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDocenteActionPerformed

    private void txtcedula_repKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedula_repKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingrese solo numeros");
        }
    }//GEN-LAST:event_txtcedula_repKeyTyped

    private void txttelef_repKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttelef_repKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingrese solo numeros");
        }
    }//GEN-LAST:event_txttelef_repKeyTyped

    private void txtnom_repKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnom_repKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingrese solo letras");
        }
        if (Character.isLowerCase(validar)) {
            String cad = ("" + validar).toUpperCase();
            validar = cad.charAt(0);
            evt.setKeyChar(validar);
        }
    }//GEN-LAST:event_txtnom_repKeyTyped

    private void txtapell_repKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapell_repKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingrese solo letras");
        }
        if (Character.isLowerCase(validar)) {
            String cad = ("" + validar).toUpperCase();
            validar = cad.charAt(0);
            evt.setKeyChar(validar);
        }
    }//GEN-LAST:event_txtapell_repKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.jButtonModificarRepre.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.jButtonEliminarRepre.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.jButton2.setEnabled(true);
        this.jButton3.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonEliminarRepreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarRepreActionPerformed
        try {
            // TODO add your handling code here:
            eliminarRepresentante();
        } catch (SQLException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEliminarRepreActionPerformed

    private void jButtonModificarRepreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarRepreActionPerformed
        try {
            // TODO add your handling code here:
            modificarDireccion();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonModificarRepreActionPerformed

    private void jButtonLimpiarRepreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarRepreActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarRepreActionPerformed

    private void CargarRepreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarRepreActionPerformed
        try {
            // TODO add your handling code here:
            ListarDatos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrearRepresentante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CargarRepreActionPerformed

    private void jTextDocenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDocenteKeyTyped
        // TODO add your handling code here:
         char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingrese solo numeros");
        }
    }//GEN-LAST:event_jTextDocenteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearRepresentante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearRepresentante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearRepresentante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearRepresentante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearRepresentante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CargarRepre;
    private javax.swing.JButton btnsalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAceptarRepre;
    private javax.swing.JButton jButtonEliminarRepre;
    private javax.swing.JButton jButtonLimpiarRepre;
    private javax.swing.JButton jButtonModificarRepre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAsignatura2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextDocente;
    private javax.swing.JTextField jTexteditdirec;
    private javax.swing.JTextField txtapell_rep;
    private javax.swing.JTextField txtcedula_rep;
    private javax.swing.JTextField txtcorreo_rep;
    private javax.swing.JTextField txtdir_rep;
    private javax.swing.JTextField txtnom_rep;
    private javax.swing.JTextField txttelef_rep;
    // End of variables declaration//GEN-END:variables
}
